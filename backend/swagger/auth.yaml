openapi: 3.0.0
info:
  title: Authentication API
  version: 1.0.0
  description: API for user authentication and session management
paths:
  /api/v1/auth/register:
    post:
      summary: Register a new user
      tags:
        - Auth
      description: Register a new user with the specified details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "John Doe"
                email:
                  type: string
                  format: email
                  example: "john.doe@example.com"
                password:
                  type: string
                  format: password
                  example: "Password123!"
                password_dos:
                  type: string
                  format: password
                  description: "Confirmation password"
                  example: "Password123!"
                institutional:
                  type: string
                  description: "ID of the institution"
                  example: "60c72b2f9b1e8e001f8f2b58"
              required:
                - name
                - email
                - password
                - password_dos
                - institutional
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User registered successfully"
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                      institutional:
                        type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Passwords do not match"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"

  /api/v1/auth/login:
    post:
      summary: Log in a user
      tags:
        - Auth
      description: Authenticate a user and create a session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "john.doe@example.com"
                password:
                  type: string
                  format: password
                  example: "Password123!"
              required:
                - email
                - password
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Login successful"
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
        '400':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid email or password"
        '429':
          description: Too many login attempts
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Too many failed login attempts. Please try again later."
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"

  /api/v1/auth/logout:
    post:
      summary: Log out the current user
      tags:
        - Auth
      description: End the user's session and remove authentication cookies
      security:
        - cookieAuth: []
      responses:
        '200':
          description: User logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Logged out successfully"

  /api/v1/auth/verify:
    get:
      summary: Verify user authentication
      tags:
        - Auth
      description: Verify if a user is authenticated and return user information
      security:
        - cookieAuth: []
      responses:
        '200':
          description: User is authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  authenticated:
                    type: boolean
                    example: true
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  authenticated:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Not authenticated"

  /api/v1/auth/logins:
    get:
      summary: Get all login records
      tags:
        - Auth
      description: Get a list of all login attempts (for admin use)
      security:
        - cookieAuth: []
      responses:
        '200':
          description: List of login records
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    userId:
                      type: string
                    timestamp:
                      type: string
                      format: date-time
                    ip:
                      type: string
                    userAgent:
                      type: string
                    success:
                      type: boolean
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
